// <auto-generated />
using System;
using Aurora.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aurora.Infrastructure.Migrations
{
    [DbContext(typeof(ReportDbContext))]
    [Migration("20230507191127_AddCreatedByBackIn")]
    partial class AddCreatedByBackIn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Aurora.Interfaces.Models.AuroraUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastLoginUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Aurora.Interfaces.Models.Reporting.Agency", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Agencies");

                    b.HasData(
                        new
                        {
                            Id = "87D773C9-9420-4B42-857D-3DB4783476BC",
                            Name = "Durham - CRT"
                        },
                        new
                        {
                            Id = "BAD172CE-D1D5-4AD0-809C-9BD04D6D22AC",
                            Name = "Person - CRT"
                        },
                        new
                        {
                            Id = "50978BC3-DC9B-496A-84BB-53071C081BFC",
                            Name = "Durham PD"
                        });
                });

            modelBuilder.Entity("Aurora.Interfaces.Models.Reporting.AgencyIncidentType", b =>
                {
                    b.Property<string>("AgencyId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IncidentTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AgencyId", "IncidentTypeId");

                    b.HasIndex("IncidentTypeId");

                    b.ToTable("AgencyIncidentType");

                    b.HasData(
                        new
                        {
                            AgencyId = "87D773C9-9420-4B42-857D-3DB4783476BC",
                            IncidentTypeId = "EB4F4F16-7B39-448D-9215-B578335F08DE"
                        },
                        new
                        {
                            AgencyId = "87D773C9-9420-4B42-857D-3DB4783476BC",
                            IncidentTypeId = "AB0F1C6E-E6E5-489D-A88E-8010AB8A358A"
                        },
                        new
                        {
                            AgencyId = "87D773C9-9420-4B42-857D-3DB4783476BC",
                            IncidentTypeId = "5D035B97-5CB0-4FA9-978E-7B34A250426E"
                        },
                        new
                        {
                            AgencyId = "87D773C9-9420-4B42-857D-3DB4783476BC",
                            IncidentTypeId = "105B5539-879E-4F8C-B6F1-2C493CF81FAB"
                        },
                        new
                        {
                            AgencyId = "87D773C9-9420-4B42-857D-3DB4783476BC",
                            IncidentTypeId = "A7A975E0-5952-434E-9D87-F8B049D84016"
                        },
                        new
                        {
                            AgencyId = "BAD172CE-D1D5-4AD0-809C-9BD04D6D22AC",
                            IncidentTypeId = "EB4F4F16-7B39-448D-9215-B578335F08DE"
                        },
                        new
                        {
                            AgencyId = "BAD172CE-D1D5-4AD0-809C-9BD04D6D22AC",
                            IncidentTypeId = "AB0F1C6E-E6E5-489D-A88E-8010AB8A358A"
                        },
                        new
                        {
                            AgencyId = "BAD172CE-D1D5-4AD0-809C-9BD04D6D22AC",
                            IncidentTypeId = "5D035B97-5CB0-4FA9-978E-7B34A250426E"
                        },
                        new
                        {
                            AgencyId = "BAD172CE-D1D5-4AD0-809C-9BD04D6D22AC",
                            IncidentTypeId = "105B5539-879E-4F8C-B6F1-2C493CF81FAB"
                        },
                        new
                        {
                            AgencyId = "BAD172CE-D1D5-4AD0-809C-9BD04D6D22AC",
                            IncidentTypeId = "A7A975E0-5952-434E-9D87-F8B049D84016"
                        },
                        new
                        {
                            AgencyId = "50978BC3-DC9B-496A-84BB-53071C081BFC",
                            IncidentTypeId = "EB4F4F16-7B39-448D-9215-B578335F08DE"
                        },
                        new
                        {
                            AgencyId = "50978BC3-DC9B-496A-84BB-53071C081BFC",
                            IncidentTypeId = "AB0F1C6E-E6E5-489D-A88E-8010AB8A358A"
                        },
                        new
                        {
                            AgencyId = "50978BC3-DC9B-496A-84BB-53071C081BFC",
                            IncidentTypeId = "5D035B97-5CB0-4FA9-978E-7B34A250426E"
                        },
                        new
                        {
                            AgencyId = "50978BC3-DC9B-496A-84BB-53071C081BFC",
                            IncidentTypeId = "105B5539-879E-4F8C-B6F1-2C493CF81FAB"
                        },
                        new
                        {
                            AgencyId = "50978BC3-DC9B-496A-84BB-53071C081BFC",
                            IncidentTypeId = "A7A975E0-5952-434E-9D87-F8B049D84016"
                        },
                        new
                        {
                            AgencyId = "50978BC3-DC9B-496A-84BB-53071C081BFC",
                            IncidentTypeId = "199E7EA4-9AD2-4221-8A9D-F410621AA3CC"
                        },
                        new
                        {
                            AgencyId = "50978BC3-DC9B-496A-84BB-53071C081BFC",
                            IncidentTypeId = "03A14A69-C6B7-4573-B95E-12574354C65B"
                        });
                });

            modelBuilder.Entity("Aurora.Interfaces.Models.Reporting.IncidentType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("CollectLocation")
                        .HasColumnType("bit");

                    b.Property<bool>("CollectPerson")
                        .HasColumnType("bit");

                    b.Property<bool>("CollectTime")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("RequiresTime")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("IncidentTypes");

                    b.HasData(
                        new
                        {
                            Id = "EB4F4F16-7B39-448D-9215-B578335F08DE",
                            CollectLocation = true,
                            CollectPerson = true,
                            CollectTime = true,
                            Name = "Death Call",
                            RequiresTime = true
                        },
                        new
                        {
                            Id = "AB0F1C6E-E6E5-489D-A88E-8010AB8A358A",
                            CollectLocation = false,
                            CollectPerson = false,
                            CollectTime = false,
                            Name = "Administration",
                            RequiresTime = false
                        },
                        new
                        {
                            Id = "5D035B97-5CB0-4FA9-978E-7B34A250426E",
                            CollectLocation = true,
                            CollectPerson = false,
                            CollectTime = true,
                            Name = "Training",
                            RequiresTime = true
                        },
                        new
                        {
                            Id = "105B5539-879E-4F8C-B6F1-2C493CF81FAB",
                            CollectLocation = true,
                            CollectPerson = true,
                            CollectTime = true,
                            Name = "Other",
                            RequiresTime = false
                        },
                        new
                        {
                            Id = "A7A975E0-5952-434E-9D87-F8B049D84016",
                            CollectLocation = true,
                            CollectPerson = true,
                            CollectTime = true,
                            Name = "Crisis Call",
                            RequiresTime = true
                        },
                        new
                        {
                            Id = "199E7EA4-9AD2-4221-8A9D-F410621AA3CC",
                            CollectLocation = true,
                            CollectPerson = false,
                            CollectTime = true,
                            Name = "Ride Along",
                            RequiresTime = false
                        },
                        new
                        {
                            Id = "03A14A69-C6B7-4573-B95E-12574354C65B",
                            CollectLocation = true,
                            CollectPerson = false,
                            CollectTime = true,
                            Name = "Roll Call/Meeting",
                            RequiresTime = false
                        });
                });

            modelBuilder.Entity("Aurora.Interfaces.Models.Reporting.Report", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AgencyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ClearedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetUtcDate()");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("IncidentTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Miles")
                        .HasColumnType("float");

                    b.Property<string>("Narrative")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<string>("ReportUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("ReportId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasAlternateKey("ReportId"), false);

                    b.HasIndex("AgencyId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("IncidentTypeId");

                    b.HasIndex("ReportUserId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Aurora.Interfaces.Models.Reporting.ReportPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReportId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("RequestFollowup")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportPerson");
                });

            modelBuilder.Entity("Aurora.Interfaces.Models.Reporting.AgencyIncidentType", b =>
                {
                    b.HasOne("Aurora.Interfaces.Models.Reporting.Agency", "Agency")
                        .WithMany("IncidentTypes")
                        .HasForeignKey("AgencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aurora.Interfaces.Models.Reporting.IncidentType", "IncidentType")
                        .WithMany("AgencyIncidentTypes")
                        .HasForeignKey("IncidentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agency");

                    b.Navigation("IncidentType");
                });

            modelBuilder.Entity("Aurora.Interfaces.Models.Reporting.Report", b =>
                {
                    b.HasOne("Aurora.Interfaces.Models.Reporting.Agency", "Agency")
                        .WithMany()
                        .HasForeignKey("AgencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aurora.Interfaces.Models.AuroraUser", "CreatedByUser")
                        .WithMany("Reports")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Aurora.Interfaces.Models.Reporting.IncidentType", "IncidentType")
                        .WithMany()
                        .HasForeignKey("IncidentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aurora.Interfaces.Models.AuroraUser", "ReportUser")
                        .WithMany()
                        .HasForeignKey("ReportUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Aurora.Interfaces.Models.Reporting.MinistryOpportunityRecord", "MinistryOpportunity", b1 =>
                        {
                            b1.Property<string>("ReportId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int?>("Baptisms")
                                .HasColumnType("int");

                            b1.Property<int?>("BibleStudies")
                                .HasColumnType("int");

                            b1.Property<int?>("CounselingOpportunities")
                                .HasColumnType("int");

                            b1.Property<int?>("GospelPresentations")
                                .HasColumnType("int");

                            b1.Property<int?>("ProfessionsOfFaith")
                                .HasColumnType("int");

                            b1.HasKey("ReportId");

                            b1.ToTable("Reports");

                            b1.WithOwner()
                                .HasForeignKey("ReportId");
                        });

                    b.OwnsOne("Aurora.Interfaces.Models.Reporting.Location", "Location", b1 =>
                        {
                            b1.Property<string>("ReportId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Address")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("City")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<int>("LocationType")
                                .HasColumnType("int");

                            b1.Property<string>("State")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("Zip")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.HasKey("ReportId");

                            b1.ToTable("Reports");

                            b1.WithOwner()
                                .HasForeignKey("ReportId");
                        });

                    b.Navigation("Agency");

                    b.Navigation("CreatedByUser");

                    b.Navigation("IncidentType");

                    b.Navigation("Location");

                    b.Navigation("MinistryOpportunity")
                        .IsRequired();

                    b.Navigation("ReportUser");
                });

            modelBuilder.Entity("Aurora.Interfaces.Models.Reporting.ReportPerson", b =>
                {
                    b.HasOne("Aurora.Interfaces.Models.Reporting.Report", null)
                        .WithMany("People")
                        .HasForeignKey("ReportId");

                    b.OwnsOne("Aurora.Interfaces.Models.Reporting.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<int>("ReportPersonId")
                                .HasColumnType("int");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<int>("Type")
                                .HasColumnType("int");

                            b1.HasKey("ReportPersonId");

                            b1.ToTable("ReportPerson");

                            b1.WithOwner()
                                .HasForeignKey("ReportPersonId");
                        });

                    b.OwnsOne("Aurora.Interfaces.Models.Reporting.Location", "Location", b1 =>
                        {
                            b1.Property<int>("ReportPersonId")
                                .HasColumnType("int");

                            b1.Property<string>("Address")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("City")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<int>("LocationType")
                                .HasColumnType("int");

                            b1.Property<string>("State")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("Zip")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.HasKey("ReportPersonId");

                            b1.ToTable("ReportPerson");

                            b1.WithOwner()
                                .HasForeignKey("ReportPersonId");
                        });

                    b.Navigation("Location")
                        .IsRequired();

                    b.Navigation("PhoneNumber");
                });

            modelBuilder.Entity("Aurora.Interfaces.Models.AuroraUser", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Aurora.Interfaces.Models.Reporting.Agency", b =>
                {
                    b.Navigation("IncidentTypes");
                });

            modelBuilder.Entity("Aurora.Interfaces.Models.Reporting.IncidentType", b =>
                {
                    b.Navigation("AgencyIncidentTypes");
                });

            modelBuilder.Entity("Aurora.Interfaces.Models.Reporting.Report", b =>
                {
                    b.Navigation("People");
                });
#pragma warning restore 612, 618
        }
    }
}
