@page "/users"
@attribute [Authorize(Roles = "Administrator")]

@using Aurora.Features.User.GetUsers
@using Aurora.Interfaces
@using MediatR
@inject IMediator Mediator

<PageTitle>Users</PageTitle>

<MudText Typo="Typo.h5" GutterBottom="true">Users</MudText>
@if (!Model.Any())
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudTable Items="Model" Hover="true" SortLabel="Sort By" Elevation="0">
        <HeaderContent>
            <MudTh><MudTableSortLabel SortBy="new Func<UserRecord, object>(x => x.FirstName)">First Name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<UserRecord, object>(x => x.LastName)">Last Name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<UserRecord, object>(x => x.Name)">Username</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<UserRecord, object>(x => x.Email)">Email</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<UserRecord, object>(x => x.LastLoginUtc)">Last Login</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="First Name">@context.FirstName</MudTd>
            <MudTd DataLabel="Last Name">@context.LastName</MudTd>
            <MudTd DataLabel="Username">@context.Name</MudTd>
            <MudTd DataLabel="Email Address">@context.Email</MudTd>
            <MudTd DataLabel="Last Login">@context.LastLoginUtc?.ToLocalTime()</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>
}


@code {
    private IList<UserRecord> Model { get; set; } = new List<UserRecord>();
    protected override async Task OnInitializedAsync()
    {

        var response = await Mediator.Send(new GetUsersQuery());
        if (response.Success)
        {
            Model = response.Users;
        }
    }
}
