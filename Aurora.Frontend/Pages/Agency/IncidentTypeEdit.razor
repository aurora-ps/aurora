@using Aurora.Interfaces.Models.Reporting
@using AutoMapper
@using MediatR
@using Aurora.Features.Agency.RemoveIncidentType
@inject IDialogService DialogService
@inject IMapper Mapper
@inject IMediator Mediator

<MudTable Items="IncidentTypes" EditTrigger="TableEditTrigger.EditButton" RowEditPreview="RowEditPreview" RowEditCancel="RowEditCancel" CanCancelEdit="true">
    <ColGroup>
        <col/>
        <col/>
        <col/>
        <col/>
        <col/>
        <col/>
        <col/>
        <col/>
        <col/>
        <col/>
        <col/>
    </ColGroup>
    <HeaderContent>
        <MudTh>Incident Type</MudTh>
        <MudTh>Location</MudTh>
        <MudTh>Person</MudTh>
        <MudTh>Time</MudTh>
        <MudTh>Require Time</MudTh>
        <MudTh>Counseling</MudTh>
        <MudTh>Professions</MudTh>
        <MudTh>Baptisms</MudTh>
        <MudTh>Bible Study</MudTh>
        <MudTh>Gospel</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate Context="incidentType">
        <MudTd DataLabel="Incident Type">@incidentType.Name</MudTd>
        <MudTd DataLabel="Location">
            <MudCheckBox T="bool" ReadOnly="true" @bind-Checked="@incidentType.CollectLocation"/>
        </MudTd>
        <MudTd DataLabel="Person">
            <MudCheckBox T="bool" ReadOnly="true" @bind-Checked="@incidentType.CollectPerson"/>
        </MudTd>
        <MudTd DataLabel="Time">
            <MudCheckBox T="bool" ReadOnly="true" @bind-Checked="@incidentType.CollectTime"/>
        </MudTd>
        <MudTd DataLabel="Require Time">
            <MudCheckBox T="bool" ReadOnly="true" @bind-Checked="@incidentType.RequiresTime"/>
        </MudTd>
        <MudTd DataLabel="Counseling">
            <MudCheckBox T="bool" ReadOnly="true" @bind-Checked="@incidentType.ShowCounselingOpportunities"/>
        </MudTd>
        <MudTd DataLabel="Professions of Faith">
            <MudCheckBox T="bool" ReadOnly="true" @bind-Checked="@incidentType.ShowProfessionsOfFaith"/>
        </MudTd>
        <MudTd DataLabel="Baptisms">
            <MudCheckBox T="bool" ReadOnly="true" @bind-Checked="@incidentType.ShowBaptisms"/>
        </MudTd>
        <MudTd DataLabel="Bible Stud">
            <MudCheckBox T="bool" ReadOnly="true" @bind-Checked="@incidentType.ShowBibleStudies"/>
        </MudTd>
        <MudTd DataLabel="Gospel Presentations">
            <MudCheckBox T="bool" ReadOnly="true" @bind-Checked="@incidentType.ShowGospelPresentations"/>
        </MudTd>
        <MudTd>
            <MudIconButton Size="@Size.Small" OnClick="@(() => DeleteItem(incidentType.Id))" Icon="@Icons.Material.Filled.Delete"/>
        </MudTd>
    </RowTemplate>
    <RowEditingTemplate Context="incidentType">
        <MudTd DataLabel="Incident Type">@incidentType.Name</MudTd>
        <MudTd DataLabel="Location">
            <MudCheckBox T="bool" @bind-Checked="@incidentType.CollectLocation"/>
        </MudTd>
        <MudTd DataLabel="Person">
            <MudCheckBox T="bool" @bind-Checked="@incidentType.CollectPerson"/>
        </MudTd>
        <MudTd DataLabel="Time">
            <MudCheckBox T="bool" @bind-Checked="@incidentType.CollectTime"/>
        </MudTd>
        <MudTd DataLabel="Require Time">
            <MudCheckBox T="bool" @bind-Checked="@incidentType.RequiresTime"/>
        </MudTd>
        <MudTd DataLabel="Counseling">
            <MudCheckBox T="bool" @bind-Checked="@incidentType.ShowCounselingOpportunities"/>
        </MudTd>
        <MudTd DataLabel="Professions of Faith">
            <MudCheckBox T="bool" @bind-Checked="@incidentType.ShowProfessionsOfFaith"/>
        </MudTd>
        <MudTd DataLabel="Baptisms">
            <MudCheckBox T="bool" @bind-Checked="@incidentType.ShowBaptisms"/>
        </MudTd>
        <MudTd DataLabel="Bible Stud">
            <MudCheckBox T="bool" @bind-Checked="@incidentType.ShowBibleStudies"/>
        </MudTd>
        <MudTd DataLabel="Gospel Presentations">
            <MudCheckBox T="bool" @bind-Checked="@incidentType.ShowGospelPresentations"/>
        </MudTd>
        <MudTd></MudTd>
    </RowEditingTemplate>
</MudTable>

@code {

    [Parameter]
    public string AgencyId { get; set; }

    [Parameter]
    public IList<IncidentTypeRecord> IncidentTypes { get; set; }

    [Parameter]
    public EventCallback<string> OnRecordUpdated { get; set; }

    private IncidentTypeRecord? _editingIncidentType;

    private void RowEditPreview(object obj)
    {
        if (obj is IncidentTypeRecord record)
        {
    // Need to create a copy of the record so that we can cancel the edit
            _editingIncidentType = Mapper.Map<IncidentTypeRecord>(record);
        }
    }

    private void RowEditCancel(object obj)
    {
        if (_editingIncidentType != null)
        {
            if (obj is IncidentTypeRecord record)
            {
                Mapper.Map(_editingIncidentType, record);
                _editingIncidentType = null;
            }
        }
    }

    async Task DeleteItem(string incidentTypeId)
    {
        var parameters = new DialogParameters
        {
            { "ContentText", "Do you want to Delete this Incident Type?" },
            { "ButtonText", "Yes" }
        };

        var dialogResult = await DialogService.ShowAsync<DialogConfirm>("Confirm", parameters);
        var result = await dialogResult.Result;
        if (!result.Canceled && bool.TryParse(result.Data.ToString(), out var resultBool) && resultBool)
        {
            var record = IncidentTypes.FirstOrDefault(x => x.Id == incidentTypeId);
            if (record != null)
            {
                var removeCommand = new RemoveAgencyIncidentTypeCommand { AgencyId = AgencyId, IncidentTypeRecord = record };
                await Mediator.Send(removeCommand);

                if (OnRecordUpdated.HasDelegate)
                {
                    await OnRecordUpdated.InvokeAsync(incidentTypeId);
                }
            }
        }
    }
}